NAME=Simplicity
HOST=http://localhost
PORT=8800
URL_SCHEME=http
API_VERSION=1
NODE_ENV=production

DEBUG=false

## Timezone to use for date/time operations
TIMEZONE=UTC

# CONNECTION PARAMETERS (Database, Cache, Notifications)

## Database connection settings
## See the config/database.js configuration file.

### The default connection to use for database operations.
### Default is sqlite.
DB_CONNECTION=sqlite

### Either set the full URL here...
DB_URL=mongodb://127.0.0.1/exampleApp 

### ... Or use environment variables
DB_HOST="0.0.0.0"
DB_USERNAME=
DB_PASSWORD=
DB_DBNAME=exampleApp
DB_PORT=27017

## The storage location for sqlite database data,
## relative to the storage/ directory. Default is ".sqlite".
DB_STORAGE_PATH=.sqlite

## Views configuration
### Views Directory (relative to the src/ directory)
VIEWS_DIR=views

### View template engine (default is pug)
### If you specify a different engine, make sure to install the appropriate package.
VIEW_TEMPLATES_ENGINE=pug

## Cache and temporary storage

### Default storage to use for caching
### Possible values: file|memory|redis.
### Default is memory.
CACHE_STORE=memory

### There might be other applications using the same cache.
### This can happen, for example, When using the Redis cache store.
### To avoid collisions, you may prefix every cache key.
CACHE_KEY_PREFIX=

### Whether (true) or not (false) to compress data before caching
CACHE_COMPRESS_DATA=false

### The cache storage location when the CACHE_STORE is file,
### relative to the storage/ directory. Default is ".cache".
CACHE_STORAGE_PATH=.cache

### Either set the Redis URL or set the individual Redis connection options.
### If we set the Redis URL, the individual Redis connection options are ignored.
REDIS_URL=
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_USERNAME=
REDIS_PASSWORD=
REDIS_DATABASE=0

# Session (express-session) settings
SESSION_NAME="connect.sid"
SESSION_COOKIE_DOMAIN=localhost
SESSION_COOKIE_PATH="/"

## Session expiry time (in minutes, 0 indicates no expiry)
SESSION_EXPIRY=0
SESSION_SECRET="secret string"

## whether to serve secure cookies (i.e., only transmit cookie over https)
## 0, "0", false, "false", and "" all evaluate to boolean false.
## Every other value evaluates to true
SESSION_SECURE=false

## Possible values: strict, lax, none, empty string
SESSION_SAME_SITE=none

## Session store driver
## Currently supported drivers include "memory" and "redis".
SESSION_STORE_DRIVER=memory

# CORS settings

## Allowed HTTP Headers
## (separate headers with spaces, comma, semicolon, or pipe (|)).
## You can specify the headers in either upper or lower case or
## even a mix of upper and lower cases.
ALLOWED_HEADERS="Origin, X-Requested-With, Content-Type, Accept, Authorization"

## Allowed HTTP Methods
## (separate methods with spaces, comma, semicolon, or pipe (|)).
## You can specify the methods in either upper or lower case or
## even a mix of upper and lower cases.
ALLOWED_METHODS="GET, POST put|DelEte"

## Allowed origins
## (separate multiple origins by spaces, comma, semicolon, or pipe(|))
ALLOWED_ORIGINS="http://localhost  http://localhost:3000"

## Logging
LOG_UNCAUGHT_EXCEPTIONS=false
LOG_PROMISE_REJECTIONS=false
LOG_TO_CONSOLE=true
LOG_TO_FILE=true

## The log directory, relative to the root directory.
LOG_DIRECTORY=".logs"
